// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

#include <xsde/cxx/pre.hxx>

// Begin prologue.
//
//
// End prologue.

#include "IntrantList.hpp"

namespace N_Data
{
  // Action
  //

  const ::std::string& Action::
  title () const
  {
    return this->title_;
  }

  ::std::string& Action::
  title ()
  {
    return this->title_;
  }

  void Action::
  title (const ::std::string& x)
  {
    this->title_ = x;
  }

  bool Action::
  delegate_present () const
  {
    return this->delegate_present_;
  }

  void Action::
  delegate_present (bool x)
  {
    this->delegate_present_ = x;
  }

  const ::std::string& Action::
  delegate () const
  {
    return this->delegate_;
  }

  ::std::string& Action::
  delegate ()
  {
    return this->delegate_;
  }

  void Action::
  delegate (const ::std::string& x)
  {
    this->delegate_ = x;
    this->delegate_present_ = true;
  }

  bool Action::
  deadlineDate_present () const
  {
    return this->deadlineDate_present_;
  }

  void Action::
  deadlineDate_present (bool x)
  {
    this->deadlineDate_present_ = x;
  }

  const ::xml_schema::date& Action::
  deadlineDate () const
  {
    return this->deadlineDate_;
  }

  ::xml_schema::date& Action::
  deadlineDate ()
  {
    return this->deadlineDate_;
  }

  void Action::
  deadlineDate (const ::xml_schema::date& x)
  {
    this->deadlineDate_ = x;
    this->deadlineDate_present_ = true;
  }

  // ActionList
  //

  const ActionList::Action_sequence& ActionList::
  Action () const
  {
    return this->Action_;
  }

  ActionList::Action_sequence& ActionList::
  Action ()
  {
    return this->Action_;
  }

  // IntrantList
  //

  const IntrantList::Intrant_sequence& IntrantList::
  Intrant () const
  {
    return this->Intrant_;
  }

  IntrantList::Intrant_sequence& IntrantList::
  Intrant ()
  {
    return this->Intrant_;
  }

  // Intrant
  //

  const ::std::string& Intrant::
  title () const
  {
    return this->title_;
  }

  ::std::string& Intrant::
  title ()
  {
    return this->title_;
  }

  void Intrant::
  title (const ::std::string& x)
  {
    this->title_ = x;
  }

  bool Intrant::
  description_present () const
  {
    return this->description_present_;
  }

  void Intrant::
  description_present (bool x)
  {
    this->description_present_ = x;
  }

  const ::std::string& Intrant::
  description () const
  {
    return this->description_;
  }

  ::std::string& Intrant::
  description ()
  {
    return this->description_;
  }

  void Intrant::
  description (const ::std::string& x)
  {
    this->description_ = x;
    this->description_present_ = true;
  }

  const Intrant::image_sequence& Intrant::
  image () const
  {
    return this->image_;
  }

  Intrant::image_sequence& Intrant::
  image ()
  {
    return this->image_;
  }

  const Intrant::pdf_sequence& Intrant::
  pdf () const
  {
    return this->pdf_;
  }

  Intrant::pdf_sequence& Intrant::
  pdf ()
  {
    return this->pdf_;
  }

  const Intrant::sound_sequence& Intrant::
  sound () const
  {
    return this->sound_;
  }

  Intrant::sound_sequence& Intrant::
  sound ()
  {
    return this->sound_;
  }

  const Intrant::url_sequence& Intrant::
  url () const
  {
    return this->url_;
  }

  Intrant::url_sequence& Intrant::
  url ()
  {
    return this->url_;
  }

  bool Intrant::
  deadlineDate_present () const
  {
    return this->deadlineDate_present_;
  }

  void Intrant::
  deadlineDate_present (bool x)
  {
    this->deadlineDate_present_ = x;
  }

  const ::xml_schema::date& Intrant::
  deadlineDate () const
  {
    return this->deadlineDate_;
  }

  ::xml_schema::date& Intrant::
  deadlineDate ()
  {
    return this->deadlineDate_;
  }

  void Intrant::
  deadlineDate (const ::xml_schema::date& x)
  {
    this->deadlineDate_ = x;
    this->deadlineDate_present_ = true;
  }

  bool Intrant::
  actions_present () const
  {
    return this->actions_ != 0;
  }

  const ::N_Data::ActionList& Intrant::
  actions () const
  {
    return *this->actions_;
  }

  ::N_Data::ActionList& Intrant::
  actions ()
  {
    return *this->actions_;
  }

  void Intrant::
  actions (::N_Data::ActionList* x)
  {
    delete this->actions_;
    this->actions_ = x;
  }
}

#include <stdlib.h>
#include <new>

namespace N_Data
{
  // Action
  //

  Action::
  Action ()
  {
    this->delegate_present_ = false;
    this->deadlineDate_present_ = false;
  }

  Action::
  ~Action ()
  {
  }

  Action::
  Action (const Action& x)
  {
    XSDE_UNUSED (x);
    this->title_ = x.title_;
    this->delegate_present_ = x.delegate_present_;
    if (this->delegate_present_)
      this->delegate_ = x.delegate_;
    this->deadlineDate_present_ = x.deadlineDate_present_;
    if (this->deadlineDate_present_)
      this->deadlineDate_ = x.deadlineDate_;
  }

  Action& Action::
  operator= (const Action& x)
  {
    XSDE_UNUSED (x);
    this->title_ = x.title_;
    this->delegate_present_ = x.delegate_present_;
    if (this->delegate_present_)
      this->delegate_ = x.delegate_;
    this->deadlineDate_present_ = x.deadlineDate_present_;
    if (this->deadlineDate_present_)
      this->deadlineDate_ = x.deadlineDate_;
    return *this;
  }

  // ActionList
  //

  ActionList::
  ActionList ()
  {
  }

  ActionList::
  ~ActionList ()
  {
  }

  // IntrantList
  //

  IntrantList::
  IntrantList ()
  {
  }

  IntrantList::
  ~IntrantList ()
  {
  }

  // Intrant
  //

  Intrant::
  Intrant ()
  {
    this->description_present_ = false;
    this->deadlineDate_present_ = false;
    this->actions_ = 0;
  }

  Intrant::
  ~Intrant ()
  {
    delete this->actions_;
  }
}

// Begin epilogue.
//
//
// End epilogue.

#include <xsde/cxx/post.hxx>

