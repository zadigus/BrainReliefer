// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "IntrantList-simpl.hpp"

#include <xsde/cxx/serializer/validating/string-common.hxx>

namespace N_Data
{
  // Action_simpl
  //

  void Action_simpl::
  pre (const ::N_Data::Action& x)
  {
    this->Action_simpl_state_.Action_ = &x;
  }

  ::std::string Action_simpl::
  title ()
  {
    return this->Action_simpl_state_.Action_->title ();
  }

  bool Action_simpl::
  delegate_present ()
  {
    return this->Action_simpl_state_.Action_->delegate_present ();
  }

  ::std::string Action_simpl::
  delegate ()
  {
    return this->Action_simpl_state_.Action_->delegate ();
  }

  bool Action_simpl::
  deadlineDate_present ()
  {
    return this->Action_simpl_state_.Action_->deadlineDate_present ();
  }

  ::xml_schema::date Action_simpl::
  deadlineDate ()
  {
    return this->Action_simpl_state_.Action_->deadlineDate ();
  }

  // ActionList_simpl
  //

  void ActionList_simpl::
  pre (const ::N_Data::ActionList& x)
  {
    this->ActionList_simpl_state_.ActionList_ = &x;
    this->ActionList_simpl_state_.Action_ = 
    this->ActionList_simpl_state_.ActionList_->Action ().begin ();
    this->ActionList_simpl_state_.Action_end_ = 
    this->ActionList_simpl_state_.ActionList_->Action ().end ();
  }

  bool ActionList_simpl::
  Action_next ()
  {
    return this->ActionList_simpl_state_.Action_ != 
    this->ActionList_simpl_state_.Action_end_;
  }

  const ::N_Data::Action& ActionList_simpl::
  Action ()
  {
    return *this->ActionList_simpl_state_.Action_++;
  }

  // IntrantList_simpl
  //

  void IntrantList_simpl::
  pre (const ::N_Data::IntrantList& x)
  {
    this->IntrantList_simpl_state_.IntrantList_ = &x;
    this->IntrantList_simpl_state_.Intrant_ = 
    this->IntrantList_simpl_state_.IntrantList_->Intrant ().begin ();
    this->IntrantList_simpl_state_.Intrant_end_ = 
    this->IntrantList_simpl_state_.IntrantList_->Intrant ().end ();
  }

  bool IntrantList_simpl::
  Intrant_next ()
  {
    return this->IntrantList_simpl_state_.Intrant_ != 
    this->IntrantList_simpl_state_.Intrant_end_;
  }

  const ::N_Data::Intrant& IntrantList_simpl::
  Intrant ()
  {
    return *this->IntrantList_simpl_state_.Intrant_++;
  }

  // Intrant_simpl
  //

  void Intrant_simpl::
  pre (const ::N_Data::Intrant& x)
  {
    this->Intrant_simpl_state_.Intrant_ = &x;
    this->Intrant_simpl_state_.image_ = 
    this->Intrant_simpl_state_.Intrant_->image ().begin ();
    this->Intrant_simpl_state_.image_end_ = 
    this->Intrant_simpl_state_.Intrant_->image ().end ();
    this->Intrant_simpl_state_.pdf_ = 
    this->Intrant_simpl_state_.Intrant_->pdf ().begin ();
    this->Intrant_simpl_state_.pdf_end_ = 
    this->Intrant_simpl_state_.Intrant_->pdf ().end ();
    this->Intrant_simpl_state_.sound_ = 
    this->Intrant_simpl_state_.Intrant_->sound ().begin ();
    this->Intrant_simpl_state_.sound_end_ = 
    this->Intrant_simpl_state_.Intrant_->sound ().end ();
    this->Intrant_simpl_state_.url_ = 
    this->Intrant_simpl_state_.Intrant_->url ().begin ();
    this->Intrant_simpl_state_.url_end_ = 
    this->Intrant_simpl_state_.Intrant_->url ().end ();
  }

  ::std::string Intrant_simpl::
  title ()
  {
    return this->Intrant_simpl_state_.Intrant_->title ();
  }

  bool Intrant_simpl::
  description_present ()
  {
    return this->Intrant_simpl_state_.Intrant_->description_present ();
  }

  ::std::string Intrant_simpl::
  description ()
  {
    return this->Intrant_simpl_state_.Intrant_->description ();
  }

  bool Intrant_simpl::
  image_next ()
  {
    return this->Intrant_simpl_state_.image_ != 
    this->Intrant_simpl_state_.image_end_;
  }

  ::std::string Intrant_simpl::
  image ()
  {
    return *this->Intrant_simpl_state_.image_++;
  }

  bool Intrant_simpl::
  pdf_next ()
  {
    return this->Intrant_simpl_state_.pdf_ != 
    this->Intrant_simpl_state_.pdf_end_;
  }

  ::std::string Intrant_simpl::
  pdf ()
  {
    return *this->Intrant_simpl_state_.pdf_++;
  }

  bool Intrant_simpl::
  sound_next ()
  {
    return this->Intrant_simpl_state_.sound_ != 
    this->Intrant_simpl_state_.sound_end_;
  }

  ::std::string Intrant_simpl::
  sound ()
  {
    return *this->Intrant_simpl_state_.sound_++;
  }

  bool Intrant_simpl::
  url_next ()
  {
    return this->Intrant_simpl_state_.url_ != 
    this->Intrant_simpl_state_.url_end_;
  }

  ::std::string Intrant_simpl::
  url ()
  {
    return *this->Intrant_simpl_state_.url_++;
  }

  bool Intrant_simpl::
  deadlineDate_present ()
  {
    return this->Intrant_simpl_state_.Intrant_->deadlineDate_present ();
  }

  ::xml_schema::date Intrant_simpl::
  deadlineDate ()
  {
    return this->Intrant_simpl_state_.Intrant_->deadlineDate ();
  }

  bool Intrant_simpl::
  actions_present ()
  {
    return this->Intrant_simpl_state_.Intrant_->actions_present ();
  }

  const ::N_Data::ActionList& Intrant_simpl::
  actions ()
  {
    return this->Intrant_simpl_state_.Intrant_->actions ();
  }
}

namespace N_Data
{
  // IntrantList_saggr
  //

  IntrantList_saggr::
  IntrantList_saggr ()
  {
    this->Action_s_.serializers (this->string_s_,
                                 this->string_s_,
                                 this->date_s_);

    this->ActionList_s_.serializers (this->Action_s_);

    this->Intrant_s_.serializers (this->string_s_,
                                  this->string_s_,
                                  this->string_s_,
                                  this->string_s_,
                                  this->string_s_,
                                  this->string_s_,
                                  this->date_s_,
                                  this->ActionList_s_);

    this->IntrantList_s_.serializers (this->Intrant_s_);
  }

  const char* IntrantList_saggr::
  root_name ()
  {
    return "IntrantList";
  }

  const char* IntrantList_saggr::
  root_namespace ()
  {
    return "";
  }
}

// Begin epilogue.
//
//
// End epilogue.

