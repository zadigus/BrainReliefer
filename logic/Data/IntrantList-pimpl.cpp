// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "IntrantList-pimpl.hpp"

#include <xsde/cxx/parser/non-validating/string-common.hxx>

namespace N_Data
{
  // Action_pimpl
  //

  void Action_pimpl::
  pre ()
  {
    this->Action_pimpl_state_.Action_ = ::N_Data::Action ();
  }

  void Action_pimpl::
  title (const ::std::string& x)
  {
    this->Action_pimpl_state_.Action_.title (x);
  }

  void Action_pimpl::
  delegate (const ::std::string& x)
  {
    this->Action_pimpl_state_.Action_.delegate (x);
  }

  void Action_pimpl::
  deadlineDate (const ::xml_schema::date& x)
  {
    this->Action_pimpl_state_.Action_.deadlineDate (x);
  }

  ::N_Data::Action Action_pimpl::
  post_Action ()
  {
    return this->Action_pimpl_state_.Action_;
  }

  // ActionList_pimpl
  //

  ActionList_pimpl::
  ActionList_pimpl (bool b)
  {
    this->ActionList_pimpl_base_ = b;
    this->ActionList_pimpl_state_.ActionList_ = 0;
  }

  ActionList_pimpl::
  ~ActionList_pimpl ()
  {
    if (!this->ActionList_pimpl_base_ && this->ActionList_pimpl_state_.ActionList_)
      delete this->ActionList_pimpl_state_.ActionList_;
  }

  void ActionList_pimpl::
  _reset ()
  {
    ActionList_pskel::_reset ();

    if (!this->ActionList_pimpl_base_ && this->ActionList_pimpl_state_.ActionList_)
    {
      delete this->ActionList_pimpl_state_.ActionList_;
      this->ActionList_pimpl_state_.ActionList_ = 0;
    }
  }

  void ActionList_pimpl::
  pre_impl (::N_Data::ActionList* x)
  {
    this->ActionList_pimpl_state_.ActionList_ = x;
  }

  void ActionList_pimpl::
  pre ()
  {
    ::N_Data::ActionList* x = new ::N_Data::ActionList;
    this->pre_impl (x);
  }

  void ActionList_pimpl::
  Action (const ::N_Data::Action& x)
  {
    this->ActionList_pimpl_state_.ActionList_->Action ().push_back (x);
  }

  ::N_Data::ActionList* ActionList_pimpl::
  post_ActionList ()
  {
    ::N_Data::ActionList* r = this->ActionList_pimpl_state_.ActionList_;
    this->ActionList_pimpl_state_.ActionList_ = 0;
    return r;
  }

  // IntrantList_pimpl
  //

  IntrantList_pimpl::
  IntrantList_pimpl (bool b)
  {
    this->IntrantList_pimpl_base_ = b;
    this->IntrantList_pimpl_state_.IntrantList_ = 0;
  }

  IntrantList_pimpl::
  ~IntrantList_pimpl ()
  {
    if (!this->IntrantList_pimpl_base_ && this->IntrantList_pimpl_state_.IntrantList_)
      delete this->IntrantList_pimpl_state_.IntrantList_;
  }

  void IntrantList_pimpl::
  _reset ()
  {
    IntrantList_pskel::_reset ();

    if (!this->IntrantList_pimpl_base_ && this->IntrantList_pimpl_state_.IntrantList_)
    {
      delete this->IntrantList_pimpl_state_.IntrantList_;
      this->IntrantList_pimpl_state_.IntrantList_ = 0;
    }
  }

  void IntrantList_pimpl::
  pre_impl (::N_Data::IntrantList* x)
  {
    this->IntrantList_pimpl_state_.IntrantList_ = x;
  }

  void IntrantList_pimpl::
  pre ()
  {
    ::N_Data::IntrantList* x = new ::N_Data::IntrantList;
    this->pre_impl (x);
  }

  void IntrantList_pimpl::
  Intrant (::N_Data::Intrant* x)
  {
    this->IntrantList_pimpl_state_.IntrantList_->Intrant ().push_back (x);
  }

  ::N_Data::IntrantList* IntrantList_pimpl::
  post_IntrantList ()
  {
    ::N_Data::IntrantList* r = this->IntrantList_pimpl_state_.IntrantList_;
    this->IntrantList_pimpl_state_.IntrantList_ = 0;
    return r;
  }

  // Intrant_pimpl
  //

  Intrant_pimpl::
  Intrant_pimpl (bool b)
  {
    this->Intrant_pimpl_base_ = b;
    this->Intrant_pimpl_state_.Intrant_ = 0;
  }

  Intrant_pimpl::
  ~Intrant_pimpl ()
  {
    if (!this->Intrant_pimpl_base_ && this->Intrant_pimpl_state_.Intrant_)
      delete this->Intrant_pimpl_state_.Intrant_;
  }

  void Intrant_pimpl::
  _reset ()
  {
    Intrant_pskel::_reset ();

    if (!this->Intrant_pimpl_base_ && this->Intrant_pimpl_state_.Intrant_)
    {
      delete this->Intrant_pimpl_state_.Intrant_;
      this->Intrant_pimpl_state_.Intrant_ = 0;
    }
  }

  void Intrant_pimpl::
  pre_impl (::N_Data::Intrant* x)
  {
    this->Intrant_pimpl_state_.Intrant_ = x;
  }

  void Intrant_pimpl::
  pre ()
  {
    ::N_Data::Intrant* x = new ::N_Data::Intrant;
    this->pre_impl (x);
  }

  void Intrant_pimpl::
  title (const ::std::string& x)
  {
    this->Intrant_pimpl_state_.Intrant_->title (x);
  }

  void Intrant_pimpl::
  description (const ::std::string& x)
  {
    this->Intrant_pimpl_state_.Intrant_->description (x);
  }

  void Intrant_pimpl::
  image (const ::std::string& x)
  {
    this->Intrant_pimpl_state_.Intrant_->image ().push_back (x);
  }

  void Intrant_pimpl::
  pdf (const ::std::string& x)
  {
    this->Intrant_pimpl_state_.Intrant_->pdf ().push_back (x);
  }

  void Intrant_pimpl::
  sound (const ::std::string& x)
  {
    this->Intrant_pimpl_state_.Intrant_->sound ().push_back (x);
  }

  void Intrant_pimpl::
  url (const ::std::string& x)
  {
    this->Intrant_pimpl_state_.Intrant_->url ().push_back (x);
  }

  void Intrant_pimpl::
  deadlineDate (const ::xml_schema::date& x)
  {
    this->Intrant_pimpl_state_.Intrant_->deadlineDate (x);
  }

  void Intrant_pimpl::
  actions (::N_Data::ActionList* x)
  {
    this->Intrant_pimpl_state_.Intrant_->actions (x);
  }

  ::N_Data::Intrant* Intrant_pimpl::
  post_Intrant ()
  {
    ::N_Data::Intrant* r = this->Intrant_pimpl_state_.Intrant_;
    this->Intrant_pimpl_state_.Intrant_ = 0;
    return r;
  }
}

namespace N_Data
{
  // IntrantList_paggr
  //

  IntrantList_paggr::
  IntrantList_paggr ()
  {
    this->Action_p_.parsers (this->string_p_,
                             this->string_p_,
                             this->date_p_);

    this->ActionList_p_.parsers (this->Action_p_);

    this->Intrant_p_.parsers (this->string_p_,
                              this->string_p_,
                              this->string_p_,
                              this->string_p_,
                              this->string_p_,
                              this->string_p_,
                              this->date_p_,
                              this->ActionList_p_);

    this->IntrantList_p_.parsers (this->Intrant_p_);
  }

  const char* IntrantList_paggr::
  root_name ()
  {
    return "IntrantList";
  }

  const char* IntrantList_paggr::
  root_namespace ()
  {
    return "";
  }
}

// Begin epilogue.
//
//
// End epilogue.

